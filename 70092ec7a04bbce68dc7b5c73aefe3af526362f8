{
  "comments": [
    {
      "key": {
        "uuid": "Si5f7xAA",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/reviewnotes/CreateReviewNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-03-25T14:04:26Z",
      "side": 0,
      "message": "I\u0027m more than a little surprised this didn\u0027t result in an error during injection. I\u0027ll look into why not.",
      "revId": "70092ec7a04bbce68dc7b5c73aefe3af526362f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SiJoSzV4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/reviewnotes/CreateReviewNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-25T18:17:59Z",
      "side": 0,
      "message": "LabelTypes has a parameterless protected constructor.\n\nGuice correctly :-( picks that constructor to generate the injected instance.\n\nAlthough that constructor looks unused, it is nevertheless required by GWT in the generated file\n\n gerrit-gwtui/target/.generated/com/google/gerrit/common/data/LabelTypes_JsonSerializer.java\n\n. So we cannot simply remove that constructor.\n\nThis leaves us with an unwanted (and uninitialized) injection for LabelTypes. But I guess this is only an issue for legacy code.\n\nAs I5135b3f47e71d04c9231cd078e4058dbb43c7e86 has been merged already, gerrit should be clean of injecting LabelTypes.",
      "parentUuid": "Si5f7xAA",
      "revId": "70092ec7a04bbce68dc7b5c73aefe3af526362f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Si5cSpF4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/reviewnotes/CreateReviewNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2013-03-25T18:26:16Z",
      "side": 0,
      "message": "Good point. Once again I\u0027m bitten by the fact that protected \u003e default visibility. I believe you that we\u0027ve gotten rid of all current JIT injections of LabelTypes but I\u0027d feel safer if there were some way to fix it. But if gwtui *requires* a protected no-arg constructor...not sure what we can do. I guess if we create our own LabelTypes_JsonSerializer we might be able to work around it but that seems like more effort than it\u0027s worth.",
      "parentUuid": "SiJoSzV4",
      "revId": "70092ec7a04bbce68dc7b5c73aefe3af526362f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SmOrsR04",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/reviewnotes/CreateReviewNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1012155
      },
      "writtenOn": "2013-03-25T21:13:57Z",
      "side": 0,
      "message": "Full ACK.\n\nNote, however, that LabelTypes is in \"good\" company: ChangeInfo,\nGroupInfo, ... all come with a protected no-arg constructors. So Guice\nwould happily inject uninitialized variants of them as well.\n\nThe GWT requirement for the non-private constructor comes from the\ndeserializing part of generated serializers. So for example\nLabelTypes_JsonSerializer contains a line\n\n  final com.google.gerrit.common.data.LabelTypes dst \u003d new com.google.gerrit.common.data.LabelTypes();\n\nin the fromJson method to generate an instance to inject deserialized\nvalues into.\n\nSo while decreasing visibility to package visibility obviously also\nsuffices for GWT, Guice would nonetheless use the constructors, as\nthey are not private.\n\nI fully agree that it\u0027s probably not worth investing time to come up\nwith a more bullet-proof approach that can do without those\nconstructors.",
      "parentUuid": "Si5cSpF4",
      "revId": "70092ec7a04bbce68dc7b5c73aefe3af526362f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}